name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      publish_testpypi:
        description: "Publish to Test PyPI (manual run)"
        type: boolean
        default: false
        required: false
      publish_pypi:
        description: "Publish to PyPI (manual run)"
        type: boolean
        default: false
        required: false

permissions:
  contents: write

jobs:
  codex_wheels:
    strategy:
      matrix:
        include:
          - os: macos-13
            arch_tag: darwin-x64
            bin_ext: ''
          - os: macos-14
            arch_tag: darwin-arm64
            bin_ext: ''
          - os: ubuntu-latest
            arch_tag: linux-x64
            bin_ext: ''
          # - os: windows-latest
          #   arch_tag: win-x64
          #   bin_ext: '.exe'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Detect Codex changes
        id: detect
        shell: bash
        run: |
          set -e
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            if git diff --quiet "$LAST_TAG"..HEAD -- integrations/cli_wrappers/codex; then
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            # No previous tag; treat as changed
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
          echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel


      - name: Set MACOSX_DEPLOYMENT_TARGET for Intel wheels
        if: matrix.arch_tag == 'darwin-x64'
        run: echo "MACOSX_DEPLOYMENT_TARGET=10.12" >> $GITHUB_ENV

      - name: Build wheels with cibuildwheel (manylinux on Linux)
        env:
          CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"
          CIBW_BEFORE_BUILD: "bash scripts/cibw_before_build.sh"
          CIBW_SKIP: "pp* *-win32 *-manylinux_i686 *-musllinux_*"
          CIBW_ENVIRONMENT: "CODEX_CHANGED=${{ steps.detect.outputs.changed }} CODEX_PREV_TAG=${{ steps.detect.outputs.last_tag }}"
        run: |
          cibuildwheel --output-dir wheelhouse

      - name: Upload codex wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.arch_tag }}
          path: wheelhouse/*.whl

  release:
    needs: [codex_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build sdist only
        run: python -m build --sdist

      - name: Check sdist
        run: twine check dist/*

      - name: Extract version (tag builds only)
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          echo "# Changelog" > changelog.md
          echo "" >> changelog.md
          if git describe --tags --abbrev=0 HEAD^ 2>/dev/null; then
            LAST_TAG=$(git describe --tags --abbrev=0 HEAD^)
            echo "## Changes since $LAST_TAG" >> changelog.md
            git log $LAST_TAG..HEAD --pretty=format:"- %s" >> changelog.md
          else
            echo "## Initial Release" >> changelog.md
            echo "First release of Omnara!" >> changelog.md
          fi

      - name: Download codex wheel artifacts (if any)
        uses: actions/download-artifact@v4
        with:
          name: wheels-darwin-x64
          path: dist
        continue-on-error: true
      - uses: actions/download-artifact@v4
        with:
          name: wheels-darwin-arm64
          path: dist
        continue-on-error: true
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-x64
          path: dist
        continue-on-error: true
      # Windows wheel disabled for now

      - name: Create GitHub Release (tag builds only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          body_path: changelog.md
          files: dist/*
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

      - name: Publish to Test PyPI
        if: startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_testpypi == 'true')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          twine upload --verbose --repository testpypi dist/*

      - name: Publish to PyPI
        if: (startsWith(github.ref, 'refs/tags/') && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_pypi == 'true')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload --verbose dist/*
